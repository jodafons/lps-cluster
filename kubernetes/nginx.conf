load_module /usr/lib/nginx/modules/ngx_stream_module.so;

user www-data;
worker_processes 4;
worker_rlimit_nofile 40000;
pid /run/nginx.pid;

events {
    worker_connections 8192;
    # multi_accept on;
}

http {

    # Limit max body size
    client_max_body_size 100000M;

    #
    # Upstreams
    #
    upstream rancher_servers {
        least_conn;
        server 146.164.147.11:443 	max_fails=3 fail_timeout=10s;
        server 146.164.147.22:443	max_fails=3 fail_timeout=10s;
    }

    upstream rancher_docker {
        least_conn;
        server localhost:8444 max_fails=3 fail_timeout=10s;
    }

    map $http_upgrade $connection_upgrade {
        default Upgrade;
        ''      close;
    }


    #
    # Rancher server
    #
    server {
        listen 443 ssl http2;
        server_name rancher.lps.ufrj.br;

        ssl_certificate /etc/letsencrypt/live/lps.ufrj.br/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/lps.ufrj.br/privkey.pem;

        location / {
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass https://rancher_docker;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_read_timeout 900s;
        }
    }

    #
    # Default server
    #
    server {
        listen 443 ssl http2;
        server_name lps.ufrj.br service.lps.ufrj.br www.lps.ufrj.br paf.lps.ufrj.br virtuais.lps.ufrj.br db.lps.ufrj.br wiki.lps.ufrj.br dorothy.lps.ufrj.br dorothy-image.lps.ufrj.br cocalc.lps.ufrj.br minio.lps.ufrj.br gitlab.lps.ufrj.br sandbox.lps.ufrj.br dorothy-ds.lps.ufrj.br apollo.lps.ufrj.br prefect.lps.ufrj.br;

        ssl_certificate /etc/letsencrypt/live/lps.ufrj.br/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/lps.ufrj.br/privkey.pem;
    
        location / {
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass https://rancher_servers;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_read_timeout 900s;
        }
    }

    #
    # Redirect HTTP to HTTPS
    #
    server {
        listen 80;
        return 301 https://$host$request_uri;
    }
}

stream {

  #
  # PostgreSQL
  #
  upstream postgres_backend {
    least_conn;
    server 146.164.147.11:30709 	max_fails=3 fail_timeout=10s;
    server 146.164.147.22:30709 	max_fails=3 fail_timeout=10s;
  }

  server {
    listen 5432 so_keepalive=on;
    proxy_pass postgres_backend;
  }

}
